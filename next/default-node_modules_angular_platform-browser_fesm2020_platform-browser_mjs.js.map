{"version":3,"file":"default-node_modules_angular_platform-browser_fesm2020_platform-browser_mjs.js","mappings":"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","sources":["../../packages/platform-browser/src/browser/generic_browser_adapter.ts","../../packages/platform-browser/src/browser/browser_adapter.ts","../../packages/platform-browser/src/browser/server-transition.ts","../../packages/platform-browser/src/browser/testability.ts","../../packages/platform-browser/src/browser/xhr.ts","../../packages/platform-browser/src/dom/events/event_manager.ts","../../packages/platform-browser/src/dom/shared_styles_host.ts","../../packages/platform-browser/src/dom/dom_renderer.ts","../../packages/platform-browser/src/dom/events/dom_events.ts","../../packages/platform-browser/src/dom/events/key_events.ts","../../packages/platform-browser/src/browser.ts","../../packages/platform-browser/src/browser/meta.ts","../../packages/platform-browser/src/browser/title.ts","../../packages/platform-browser/src/dom/util.ts","../../packages/platform-browser/src/browser/tools/browser.ts","../../packages/platform-browser/src/browser/tools/common_tools.ts","../../packages/platform-browser/src/browser/tools/tools.ts","../../packages/platform-browser/src/browser/transfer_state.ts","../../packages/platform-browser/src/dom/debug/by.ts","../../packages/platform-browser/src/dom/events/hammer_gestures.ts","../../packages/platform-browser/src/security/dom_sanitization_service.ts","../../packages/platform-browser/src/version.ts","../../packages/platform-browser/public_api.ts","../../packages/platform-browser/index.ts","../../packages/platform-browser/platform-browser.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter} from '@angular/common';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  readonly supportsDOMEvents: boolean = true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵparseCookieValue as parseCookieValue, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    setRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n  dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n  }\n  remove(node: Node): void {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument(): Document {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document {\n    return document;\n  }\n\n  isElementNode(node: Node): boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node: any): boolean {\n    return node instanceof DocumentFragment;\n  }\n\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void {\n    baseElement = null;\n  }\n  getUserAgent(): string {\n    return window.navigator.userAgent;\n  }\n  getCookie(name: string): string|null {\n    return parseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: HTMLAnchorElement|undefined;\nfunction relativePath(url: any): string {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  const pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationInitStatus, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: HTMLCollectionOf<HTMLStyleElement> =\n          document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n      for (let i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {GetTestability, Testability, TestabilityRegistry, ɵglobal as global} from '@angular/core';\n\nexport class BrowserGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, (<any>elem).host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {XhrFactory} from '@angular/common';\nimport {Injectable} from '@angular/core';\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n@Injectable()\nexport class BrowserXhr implements XhrFactory {\n  build(): XMLHttpRequest {\n    return new XMLHttpRequest();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   * @deprecated No longer being used in Ivy code. To be removed in version 14.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager!: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] {\n    return Array.from(this._stylesSet);\n  }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n  private _hostNodes = new Map<Node, Node[]>();\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.set(_doc.head, []);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node, styleNodes: Node[]): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      styleNodes.push(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    const styleNodes: Node[] = [];\n    this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n    this._hostNodes.set(hostNode, styleNodes);\n  }\n\n  removeHost(hostNode: Node): void {\n    const styleNodes = this._hostNodes.get(hostNode);\n    if (styleNodes) {\n      styleNodes.forEach(removeStyle);\n    }\n    this._hostNodes.delete(hostNode);\n  }\n\n  override onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach((styleNodes, hostNode) => {\n      this._addStylesToHost(additions, hostNode, styleNodes);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n  }\n}\n\nfunction removeStyle(styleNode: Node): void {\n  getDOM().remove(styleNode);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(compId: string, styles: Array<string|string[]>): string[] {\n  // Cannot use `Infinity` as depth as `infinity` is not a number literal in TypeScript.\n  // See: https://github.com/microsoft/TypeScript/issues/32277\n  return styles.flat(100).map(s => s.replace(COMPONENT_REGEX, compId));\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return (event: any) => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode = null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any {\n    return document.createComment(value);\n  }\n\n  createText(value: string): any {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any {\n    return node.parentNode;\n  }\n\n  nextSibling(node: any): any {\n    return node.nextSibling;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void {\n    el.classList.add(name);\n  }\n\n  removeClass(el: any, name: string): void {\n    el.classList.remove(name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void {\n    node.nodeValue = value;\n  }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as () => void;\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${\n        name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\n\nfunction isTemplateNode(node: any): node is HTMLTemplateElement {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  override createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, component: RendererType2) {\n    super(eventManager);\n    this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  override destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  override appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  override insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  override removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  override parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  override supports(eventName: string): boolean {\n    return true;\n  }\n\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as EventListener, false);\n    return () => this.removeEventListener(element, eventName, handler as EventListener);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    return target.removeEventListener(eventName, callback as EventListener);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap: {[k: string]: string} = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  override supports(eventName: string): boolean {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName)!;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n  static parseEventName(eventName: string): {fullKey: string, domEventName: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop()!);\n\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result: {fullKey: string, domEventName: string} = {} as any;\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n  static matchEventFullKeyCode(event: KeyboardEvent, fullKeyCode: string): boolean {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    }\n    // the keycode could be unidentified so we have to check here\n    if (keycode == null || !keycode) return false;\n    keycode = keycode.toLowerCase();\n    if (keycode === ' ') {\n      keycode = 'space';  // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: string, handler: Function, zone: NgZone): Function {\n    return (event: KeyboardEvent) => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, XhrFactory, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ApplicationRef, createPlatformFactory, EnvironmentProviders, ErrorHandler, Inject, InjectionToken, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, platformCore, PlatformRef, Provider, RendererFactory2, SkipSelf, StaticProvider, Testability, TestabilityRegistry, Type, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵinternalCreateApplication as internalCreateApplication, ɵsetDocument, ɵTESTABILITY as TESTABILITY, ɵTESTABILITY_GETTER as TESTABILITY_GETTER} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {BrowserXhr} from './browser/xhr';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n\n/**\n * Set of config options available during the application bootstrap operation.\n *\n * @publicApi\n */\nexport interface ApplicationConfig {\n  /**\n   * List of providers that should be available to the root component and all its children.\n   */\n  providers: Array<Provider|EnvironmentProviders>;\n}\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nexport function bootstrapApplication(\n    rootComponent: Type<unknown>, options?: ApplicationConfig): Promise<ApplicationRef> {\n  return internalCreateApplication({rootComponent, ...createProvidersConfig(options)});\n}\n\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nexport function createApplication(options?: ApplicationConfig) {\n  return internalCreateApplication(createProvidersConfig(options));\n}\n\nfunction createProvidersConfig(options?: ApplicationConfig) {\n  return {\n    appProviders: [\n      ...BROWSER_MODULE_PROVIDERS,\n      ...(options?.providers ?? []),\n    ],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nexport function provideProtractorTestingSupport(): Provider[] {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n  return [...TESTABILITY_PROVIDERS];\n}\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER =\n    new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\n\nconst TESTABILITY_PROVIDERS = [\n  {\n    provide: TESTABILITY_GETTER,\n    useClass: BrowserGetTestability,\n    deps: [],\n  },\n  {\n    provide: TESTABILITY,\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, TESTABILITY_GETTER]\n  },\n  {\n    provide: Testability,  // Also provide as `Testability` for backwards-compatibility.\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, TESTABILITY_GETTER]\n  }\n];\n\nconst BROWSER_MODULE_PROVIDERS: Provider[] = [\n  {provide: INJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []}, {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]}, {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  {provide: XhrFactory, useClass: BrowserXhr, deps: []},\n  NG_DEV_MODE ? {provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true} : []\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [\n    ...BROWSER_MODULE_PROVIDERS,  //\n    ...TESTABILITY_PROVIDERS\n  ],\n  exports: [CommonModule, ApplicationModule],\n})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BROWSER_MODULE_PROVIDERS_MARKER)\n              providersAlreadyPresent: boolean|null) {\n    if (NG_DEV_MODE && providersAlreadyPresent) {\n      throw new Error(\n          `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n          `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵDomAdapter as DomAdapter, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n/**\n * Represents the attributes of an HTML `<meta>` element. The element itself is\n * represented by the internal `HTMLMetaElement`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see `Meta`\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string;\n  content?: string;\n  httpEquiv?: string;\n  id?: string;\n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}&{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nexport function createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    this._dom = getDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector)!;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector: string): void {\n    this.removeTagElement(this.getTag(attrSelector)!);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach(\n        (prop: string) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every(\n        (key: string) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  private _getMetaKeyMap(prop: string): string {\n    return META_KEYS_MAP[prop] || prop;\n  }\n}\n\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP: {[prop: string]: string;} = {\n  httpEquiv: 'http-equiv'\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) {\n    this._doc.title = newTitle || '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as {[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n\nfunction performanceNow() {\n  return window.performance && window.performance.now ? window.performance.now() :\n                                                        new Date().getTime();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_ID, inject, Injectable, NgModule} from '@angular/core';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string&{\n  __not_a_string: never,\n  __value_type?: T,\n};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: () => {\n    const doc = inject(DOCUMENT);\n    const appId = inject(APP_ID);\n    const state = new TransferState();\n    state.store = retrieveTransferredState(doc, appId);\n    return state;\n  }\n})\nexport class TransferState {\n  private store: {[k: string]: unknown|undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => unknown | undefined} = {};\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void {\n    this.store[key] = value;\n  }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void {\n    delete this.store[key];\n  }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) {\n    return this.store.hasOwnProperty(key);\n  }\n\n  /**\n   * Indicates whether the state is empty.\n   */\n  get isEmpty(): boolean {\n    return Object.keys(this.store).length === 0;\n  }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function retrieveTransferredState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent)) as {};\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return initialState;\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\n@NgModule({})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens!.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n: any, selector: string): boolean {\n  if (getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n        n.msMatchesSelector && n.msMatchesSelector(selector) ||\n        n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgModule, Optional, Provider, ɵConsole as Console} from '@angular/core';\n\nimport {EVENT_MANAGER_PLUGINS, EventManagerPlugin} from './event_manager';\n\n\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   *\n   */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any;\n    domEvents?: boolean;\n    enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer!(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  private _loaderPromise: Promise<void>|null = null;\n\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  override supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(\n            `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n            `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n\n    return true;\n  }\n\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader!());\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n      };\n\n      zone.runOutsideAngular(\n          () => this._loaderPromise!\n                    .then(() => {\n                      // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                      if (!(window as any).Hammer) {\n                        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                          this.console.warn(\n                              `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                        }\n                        deregister = () => {};\n                        return;\n                      }\n\n                      if (!cancelRegistration) {\n                        // Now that Hammer is loaded and the listener is being loaded for real,\n                        // the deregistration function changes from canceling registration to\n                        // removal.\n                        deregister = this.addEventListener(element, eventName, handler);\n                      }\n                    })\n                    .catch(() => {\n                      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(\n                            `The \"${eventName}\" event cannot be bound because the custom ` +\n                            `Hammer.JS loader failed.`);\n                      }\n                      deregister = () => {};\n                    }));\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [\n    {\n      provide: EVENT_MANAGER_PLUGINS,\n      useClass: HammerGesturesPlugin,\n      multi: true,\n      deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n    },\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  ]\n})\nexport class HammerModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {forwardRef, Inject, Injectable, Injector, Sanitizer, SecurityContext, ɵ_sanitizeHtml as _sanitizeHtml, ɵ_sanitizeUrl as _sanitizeUrl, ɵallowSanitizationBypassAndThrow as allowSanitizationBypassOrThrow, ɵbypassSanitizationTrustHtml as bypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl as bypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript as bypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle as bypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl as bypassSanitizationTrustUrl, ɵBypassType as BypassType, ɵgetSanitizationBypassType as getSanitizationBypassType, ɵunwrapSafeValue as unwrapSafeValue, ɵXSS_SECURITY_URL as XSS_SECURITY_URL} from '@angular/core';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)})\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\nexport function domSanitizerImplFactory(injector: Injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\n@Injectable({providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector]})\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n  }\n\n  override sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Style)) {\n          return unwrapSafeValue(value);\n        }\n        return value as string;\n      case SecurityContext.SCRIPT:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Script)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Url)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.ResourceUrl)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error(`unsafe value used in a resource URL context (see ${XSS_SECURITY_URL})`);\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see ${XSS_SECURITY_URL})`);\n    }\n  }\n\n  override bypassSecurityTrustHtml(value: string): SafeHtml {\n    return bypassSanitizationTrustHtml(value);\n  }\n  override bypassSecurityTrustStyle(value: string): SafeStyle {\n    return bypassSanitizationTrustStyle(value);\n  }\n  override bypassSecurityTrustScript(value: string): SafeScript {\n    return bypassSanitizationTrustScript(value);\n  }\n  override bypassSecurityTrustUrl(value: string): SafeUrl {\n    return bypassSanitizationTrustUrl(value);\n  }\n  override bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return bypassSanitizationTrustResourceUrl(value);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('15.1.3');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/platform-browser';\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["GenericBrowserDomAdapter","DomAdapter","constructor","BrowserDomAdapter","makeCurrent","setRootDomAdapter","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","parseCookieValue","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","InjectionToken","appInitializerFactory","transitionId","injector","get","ApplicationInitStatus","donePromise","then","dom","getDOM","styles","querySelectorAll","i","length","SERVER_TRANSITION_PROVIDERS","provide","APP_INITIALIZER","useFactory","deps","DOCUMENT","Injector","multi","BrowserGetTestability","addToWindow","registry","global","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","Injectable","EVENT_MANAGER_PLUGINS","EventManager","_zone","Map","plugins","p","manager","_plugins","slice","reverse","element","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","_eventNameToPlugin","supports","set","i0","Inject","EventManagerPlugin","_doc","SharedStylesHost","Set","addStyles","additions","style","_stylesSet","has","add","onStylesAdded","getAllStyles","Array","from","DomSharedStylesHost","_hostNodes","head","_addStylesToHost","styleNodes","styleEl","textContent","appendChild","addHost","hostNode","removeHost","removeStyle","delete","ngOnDestroy","styleNode","COMPONENT_REGEX","NG_DEV_MODE","ngDevMode","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","compId","flat","map","s","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","undefined","DomRendererFactory2","eventManager","sharedStylesHost","appId","defaultRenderer","DefaultDomRenderer2","createRenderer","type","encapsulation","ViewEncapsulation","Emulated","renderer","rendererByCompId","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","ShadowDomRenderer","flattenStyles","begin","end","APP_ID","Object","create","destroy","namespace","createElementNS","NAMESPACE_URIS","createComment","value","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","RendererStyleFlags2","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","AT_CHARCODE","charCodeAt","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","runGuarded","keyName","rootComponent","options","internalCreateApplication","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","errorHandler","ErrorHandler","_document","ɵsetDocument","PLATFORM_ID","useValue","PLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","platformBrowser","createPlatformFactory","platformCore","BROWSER_MODULE_PROVIDERS_MARKER","TESTABILITY_GETTER","useClass","TESTABILITY","Testability","NgZone","TestabilityRegistry","INJECTOR_SCOPE","RendererFactory2","useExisting","XhrFactory","BrowserModule","providersAlreadyPresent","withServerTransition","params","ngModule","CommonModule","ApplicationModule","NgModule","args","exports","Optional","SkipSelf","createMeta","Meta","ɵɵinject","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","reduce","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","providedIn","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","m","dashCaseToCamelCase","toUpperCase","COMPILED","ng","win","ChangeDetectionPerfRecord","numTicks","msPerTick","AngularProfiler","ref","appRef","ApplicationRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","console","profile","start","performanceNow","tick","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","exportNgVar","disableDebugTools","escapeHtml","text","escapedText","unescapeHtml","unescapedText","makeStateKey","TransferState","defaultValue","store","hasKey","hasOwnProperty","isEmpty","onSerialize","onSerializeCallbacks","toJson","e","warn","JSON","stringify","inject","state","retrieveTransferredState","script","getElementById","initialState","parse","BrowserTransferStateModule","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","buildHammer","mc","Hammer","enable","overrides","HammerGesturesPlugin","_config","loader","isCustomEvent","_loaderPromise","cancelRegistration","deregister","catch","eventObj","on","off","events","HammerModule","Console","DomSanitizer","DomSanitizerImpl","forwardRef","domSanitizerImplFactory","sanitize","ctx","SecurityContext","NONE","HTML","allowSanitizationBypassOrThrow","unwrapSafeValue","_sanitizeHtml","String","toString","STYLE","SCRIPT","URL","_sanitizeUrl","RESOURCE_URL","XSS_SECURITY_URL","bypassSecurityTrustHtml","bypassSanitizationTrustHtml","bypassSecurityTrustStyle","bypassSanitizationTrustStyle","bypassSecurityTrustScript","bypassSanitizationTrustScript","bypassSecurityTrustUrl","bypassSanitizationTrustUrl","bypassSecurityTrustResourceUrl","bypassSanitizationTrustResourceUrl","VERSION","Version"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}