{"version":3,"file":"default-libs_ng-common_dist_libs_common_esm2020_index_mjs.js","mappings":"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","sources":["../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/ReplaySubject.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/Subject.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/firstValueFrom.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/observable/empty.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/observable/of.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/operators/catchError.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/operators/takeLast.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/util/EmptyError.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../common/temp/node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/src/internal/util/args.ts","../../common/temp/node_modules/.pnpm/async-mutex@0.4.1/node_modules/async-mutex/index.mjs","../../libs/ng-common/libs/common/src/index.ts","../../libs/ng-common/libs/common/src/lib/common-config/common-config.service.ts","../../libs/ng-common/libs/common/src/lib/common-config/common-lib-config.ts","../../libs/ng-common/libs/common/src/lib/common-dynamic/component-loader.service.ts","../../libs/ng-common/libs/common/src/lib/common-global/globals.ts","../../libs/ng-common/libs/common/src/lib/common-handler/abstract-plugin-handler.ts","../../libs/ng-common/libs/common/src/lib/common-handler/plugin-handler-helper.ts","../../libs/ng-common/libs/common/src/lib/common-storage/entity-store.service.ts","../../libs/ng-common/libs/common/src/lib/common-test/common-test-manager.ts","../../libs/ng-common/libs/common/src/lib/common-ui/abstract-dynamic-component.ts","../../libs/ng-common/libs/common/src/lib/common-ui/abstract-dynamic-loader-component.ts","../../libs/ng-common/libs/common/src/lib/common-ui/abstract-reference.component.ts","../../libs/ng-common/libs/common/src/lib/common-ui/abstract-reference.component.html","../../libs/ng-common/libs/common/src/lib/common-ui/dynamic-event.ts","../../libs/ng-common/libs/common/src/lib/common-ui/pipes/beautifier.pipe.ts","../../libs/ng-common/libs/common/src/lib/common-ui/plugin-base.component.ts","../../libs/ng-common/libs/common/src/lib/common-ui/template-list.ts","../../libs/ng-common/libs/common/src/lib/common-values/value.service.ts","../../libs/ng-common/libs/common/src/lib/plugin-common-test.module.ts","../../libs/ng-common/libs/common/src/lib/plugin-common.module.ts","../../common/temp/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._weightedQueues = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            if (!this._weightedQueues[weight - 1])\n                this._weightedQueues[weight - 1] = [];\n            this._weightedQueues[weight - 1].push({ resolve, reject });\n            this._dispatch();\n        });\n    }\n    runExclusive(callback, weight = 1) {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire(weight);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve) => {\n            if (!this._weightedWaiters[weight - 1])\n                this._weightedWaiters[weight - 1] = [];\n            this._weightedWaiters[weight - 1].push(resolve);\n            this._dispatch();\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatch();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatch();\n    }\n    cancel() {\n        this._weightedQueues.forEach((queue) => queue.forEach((entry) => entry.reject(this._cancelError)));\n        this._weightedQueues = [];\n    }\n    _dispatch() {\n        var _a;\n        for (let weight = this._value; weight > 0; weight--) {\n            const queueEntry = (_a = this._weightedQueues[weight - 1]) === null || _a === void 0 ? void 0 : _a.shift();\n            if (!queueEntry)\n                continue;\n            const previousValue = this._value;\n            const previousWeight = weight;\n            this._value -= weight;\n            weight = this._value + 1;\n            queueEntry.resolve([previousValue, this._newReleaser(previousWeight)]);\n        }\n        this._drainUnlockWaiters();\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        for (let weight = this._value; weight > 0; weight--) {\n            if (!this._weightedWaiters[weight - 1])\n                continue;\n            this._weightedWaiters[weight - 1].forEach((waiter) => waiter());\n            this._weightedWaiters[weight - 1] = [];\n        }\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock() {\n        return this._semaphore.waitForUnlock();\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weight) => {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield sync.acquire(weight);\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weight) => {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                sync.waitForUnlock(weight).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","export * from './lib/plugin-common.module';\nexport * from './lib/plugin-common-test.module';\n","import { Inject, Injectable, Optional } from \"@angular/core\";\nimport { CommonLibConfig } from \"./common-lib-config\";\nimport { Observable, ReplaySubject, Subject } from \"rxjs\";\nimport { DONT_CODE_COMMON_CONFIG } from \"../common-global/globals\";\n\n/**\n * A service storing configuration information.\n * Configuration can be changed after loading\n */\n@Injectable({\n    providedIn: 'root',\n  })\n  export class CommonConfigService {\n      protected config: CommonLibConfig;\n      protected updates = new ReplaySubject<Readonly<CommonLibConfig>> (1);\n\n      constructor (@Optional() @Inject(DONT_CODE_COMMON_CONFIG) config: CommonLibConfig) {\n        this.config = config;\n        if( this.config==null) this.config={};\n      }\n\n      getConfig (): Readonly<CommonLibConfig> {\n        return this.config;\n      }\n      getUpdates (): Observable<Readonly<CommonLibConfig>> {\n        return this.updates;\n      }\n      \n      updateConfig (property:keyof CommonLibConfig, value:any) {\n        this.config[property]=value;\n        this.updates.next (this.config);\n      }\n\n      batchUpdateConfig (newValues: {[P in keyof CommonLibConfig]:any}) {\n        this.config = Object.assign(this.config, newValues);\n        this.updates.next (this.config);\n      }\n  }  ","import {Inject, InjectionToken, Optional} from \"@angular/core\";\nimport {MenuItem} from \"primeng/api\";\n\nexport interface CommonLibConfig {\n  webSocketUrl?: string;\n  ideWebSocketUrl?: string;\n  projectApiUrl?: string;\n  storeApiUrl?:string;\n  documentApiUrl?:string;\n  indexedDbName?: string;\n  applicationName?: string;\n  theme?: string;\n  templateFileUrl?: string;\n}\n\n\n/*export const basicStoreApiUrlConfig = (config:CommonLibConfig) => {\n  return config.storeUrl;\n};\n\nexport const basicDocumentApiUrlConfig = (config:CommonLibConfig) => {\n  return config.documentUrl;\n};*/\n\nexport const CHANNEL_CHANGE_NAME='preview-ui-changes';\n\n/**\n * Allows application to add any menu\n */\nexport interface MenuUpdater {\n  additionalMenus (): MenuItem[];\n}\n\nexport const SANDBOX_MENUS = new InjectionToken<MenuUpdater>('Allows addition of menus');\n","import {\n  createNgModule,\n  createNgModuleRef,\n  getNgModuleById,\n  Inject,\n  Injectable,\n  Injector,\n  NgModuleRef,\n  Optional,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ChangeHandlerConfig,\n  CommandProviderInterface,\n  Core,\n  DontCodeModelPointer,\n  DontCodePreviewManager,\n  PluginModuleInterface,\n  PreviewHandler,\n} from '@dontcode/core';\nimport {DynamicComponent} from '../common-ui/dynamic-component';\nimport {COMMAND_PROVIDER, DONT_CODE_CORE} from '../common-global/globals';\nimport {Mutex} from 'async-mutex';\n\n/**\n * Manages the dynamic loading of components able to display a data located at a specific pointer position\n * Depending on the plugins loaded, a different component can display the same value.\n *\n * It keeps in cache as well the component factory and module used for a pointer position\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentLoaderService {\n  protected moduleMap = new Map<string, NgModuleRef<PluginModuleInterface>>();\n  mutex = new Mutex();\n\n  constructor(\n    protected injector: Injector,\n    @Inject(DONT_CODE_CORE)\n    protected dontCodeCore: Core,\n    protected previewMgr: DontCodePreviewManager,\n    @Optional()\n    @Inject(COMMAND_PROVIDER)\n    protected provider?: CommandProviderInterface\n  ) {\n  }\n\n  /**\n   * Either creates or retrieves the module whose name is in parameter.\n   * @param moduleName\n   */\n  getOrCreatePluginModuleRef (moduleSource:string): Promise<NgModuleRef<PluginModuleInterface>> {\n    return this.mutex.acquire().then((release) => {\n      try {\n        let moduleRef = this.moduleMap.get(moduleSource);\n        if (!moduleRef) {\n          moduleRef = createNgModule(\n            getNgModuleById ('dontcode-plugin/' + moduleSource),\n            this.injector);\n          if (moduleRef) {\n            this.moduleMap.set(moduleSource, moduleRef);\n          }\n        }\n        return moduleRef;\n      } finally {\n        release();\n      }\n    });\n\n  }\n\n  loadPluginModule(\n    handlerConfig: ChangeHandlerConfig\n  ): Promise<NgModuleRef<PluginModuleInterface>> {\n    return this.getOrCreatePluginModuleRef(handlerConfig.class.source).then(moduleRef => {\n      if (moduleRef!=null) {\n        // Now init the newly loaded module\n        this.dontCodeCore.initPlugins();\n      }\n      return moduleRef;\n    })\n  }\n\n  insertComponentForFieldType (type: string,\n                               insertPoint: ViewContainerRef\n  ) {\n    return this.insertComponent('creation/entities/fields/type', insertPoint, type);\n  }\n\n  insertComponent(\n    schemaPosition: DontCodeModelPointer | string,\n    insertPoint: ViewContainerRef,\n    currentJson?: any\n  ): Promise<DynamicComponent | null> {\n    let schemaPos: string = (schemaPosition as DontCodeModelPointer)\n      .positionInSchema;\n    let isPointer: boolean;\n    if (schemaPos) {\n      isPointer = true;\n      if (!currentJson) {\n        currentJson = this.provider?.getJsonAt(\n          (schemaPosition as DontCodeModelPointer).position\n        );\n      }\n    } else {\n      isPointer=false;\n      schemaPos = schemaPosition as string;\n    }\n\n    const handlerConfig = this.previewMgr.retrieveHandlerConfig(\n      schemaPos,\n      currentJson\n    );\n\n    if (handlerConfig) {\n      //console.debug('Importing from ', handlerConfig.class.source);\n      // First lets try if the plugin is imported during the compilation\n\n      return this.loadPluginModule(handlerConfig)\n        .then((moduleRef) => {\n          const componentClass = moduleRef.instance\n            .exposedPreviewHandlers()\n            .get(handlerConfig.class.name);\n\n          return this.createComponent(componentClass, insertPoint, moduleRef, isPointer?schemaPosition as DontCodeModelPointer:null);\n        })\n        .catch((reason) => {\n          console.error (\"Cannot load module because of \", reason);\n          return Promise.reject(\n            'Cannot load module for source ' +\n              handlerConfig.class.source +\n              ' because of ' +\n              reason\n          );\n        });\n      //console.log (\"Applying component\");\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  createComponent(\n    componentClass: Type<DynamicComponent>,\n    insertPoint: ViewContainerRef,\n    moduleRef: NgModuleRef<PluginModuleInterface> | undefined,\n    position: DontCodeModelPointer | null\n  ): DynamicComponent {\n    let injector = this.injector;\n    const componentRef = insertPoint.createComponent(\n      componentClass, {\n      injector:injector,\n      ngModuleRef: moduleRef\n      }\n    );\n    const component = componentRef.instance as DynamicComponent;\n\n    if ((component as unknown as PreviewHandler).initCommandFlow) {\n      // It's a previewHandler\n      if (!position)\n        throw new Error(\n          'Component ' +\n            component.constructor.name +\n            ' is a PreviewHandler and parent position is missing.'\n        );\n      if (!this.provider)\n        throw new Error(\n          'Component ' +\n            component.constructor.name +\n            ' is a PreviewHandler and CommandProviderInterface is missing.'\n        );\n      (component as unknown as PreviewHandler).initCommandFlow(\n        this.provider,\n        position\n      );\n    }\n    return component;\n  }\n\n  /**\n   * For some reasons, during a Jest test, modules are not registered in Angular getNgModuleById(), so we let the possibility to do it by hand\n   * @param module\n   * @param source\n   */\n  registerModuleForTest (module:NgModuleRef<PluginModuleInterface>|Type<PluginModuleInterface>, source:string) {\n    if( (module as any).instance == null )  // It's not a NgModuleRef\n      this.moduleMap.set(source, createNgModule(module as Type<PluginModuleInterface>, this.injector));\n    else\n      this.moduleMap.set(source, module as NgModuleRef<PluginModuleInterface>);\n  }\n}\n","import {InjectionToken} from \"@angular/core\";\nimport {CommandProviderInterface, Core} from \"@dontcode/core\";\nimport { CommonLibConfig } from \"../common-config/common-lib-config\";\n\nexport let COMMAND_PROVIDER = new InjectionToken<CommandProviderInterface>('Inject the current command provider interface');\n\n/**\n * Enable the Dont-code Core interface to be injected\n */\nexport const DONT_CODE_CORE=new InjectionToken<Core>(\"Dont-code core object\");\n\n/**\n * Enable the injection of static config parameters (internal use only)\n */\nexport const DONT_CODE_COMMON_CONFIG = new InjectionToken<CommonLibConfig>('DontCodeCommonLibConfig');\n","import {\n  Action,\n  ActionHandler,\n  Change,\n  CommandProviderInterface,\n  DontCodeModelPointer,\n  PreviewHandler\n} from \"@dontcode/core\";\nimport {Subscription} from \"rxjs\";\nimport {PluginHandlerHelper} from \"./plugin-handler-helper\";\n\n/**\n * Helps develop a plugin handler that is not an Angular Component. For an Angular Component handling model changes, please use PluginBaseComponent\n */\nexport abstract class AbstractPluginHandler implements PreviewHandler, ActionHandler {\n  protected subscriptions = new Subscription();\n  protected pluginHelper = new PluginHandlerHelper();\n  protected entityPointer: DontCodeModelPointer | null = null\n  protected provider: CommandProviderInterface | null = null;\n\n  protected unsubscribe(): void {\n    this.pluginHelper.unsubscribe();\n    this.subscriptions.unsubscribe();\n  }\n\n  initCommandFlow(provider: CommandProviderInterface, pointer: DontCodeModelPointer): any {\n    this.entityPointer = pointer;\n    this.provider = provider;\n    this.pluginHelper.initCommandFlow(provider, pointer, this);\n  }\n\n  protected initChangeListening() {\n    this.pluginHelper.initChangeListening();\n  }\n\n  /**\n   * When the component is created for display, it receives the initial data as complete Json.\n   * If it wants, it can call this method who will call handleChange for each property.\n   * This will avoid to duplicate code (first time when a complete json is sent, second when subelements are sent)\n   * @protected\n   */\n  protected decomposeJsonToMultipleChanges(pointer: DontCodeModelPointer, json: any): void {\n    this.pluginHelper.decomposeJsonToMultipleChanges(pointer, json);\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param cols\n   * @param colsMap\n   * @param change\n   * @param property\n   * @param transform\n   * @private\n   */\n  applyUpdatesToArray<T>(target: T[], targetMap: Map<string, number>, change: Change, property: string, transform: (position: DontCodeModelPointer, item: any) => T, applyProperty?: (target: T, key: string, value: any) => boolean): Promise<T[]> {\n    return this.applyUpdatesToArrayAsync(target, targetMap, change, property, (key, item) => {\n      return Promise.resolve( transform(key, item));\n    } );\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param target\n   * @param targetMap\n   * @param change\n   * @param property\n   * @param transform\n   * @param parentPosition\n   * @param applyProperty\n   * @private\n   */\n  applyUpdatesToArrayAsync<T>(target: T[], targetMap: Map<string, number>, change: Change, property: string|null, transform: (position: DontCodeModelPointer, item: any) => Promise<T>,\n                              parentPosition?: string, applyProperty?: (target: T, key: string|null, value: any) => boolean): Promise<T[]> {\n    return this.pluginHelper.applyUpdatesToArrayAsync(target, targetMap, change, property, transform, parentPosition, applyProperty);\n  }\n\n  /**\n   * This is where components react to changes received\n   * @param change\n   * @protected\n   */\n  abstract handleChange(change: Change): void;\n\n  /**\n   * Called whenever an action needs to be performed on the data\n   * @param action\n   */\n  performAction(action: Action): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n}\n","import {\n  Action,\n  ActionHandler,\n  Change,\n  ChangeType,\n  CommandProviderInterface,\n  DontCodeModelPointer,\n  PreviewHandler,\n} from '@dontcode/core';\nimport {catchError, first, flatMap, last, map, takeLast} from 'rxjs/operators';\nimport {firstValueFrom, from, Observable, of, Subscription} from 'rxjs';\nimport { Mutex } from 'async-mutex';\n\n/**\n * This class does all the hard work of managing changes and actions, so that your plugin only has to implement handleChange and performAction\n * As there is no one to one mapping between the position of the change and the position the plugin is interested in, we need to generate subevent to ensure the plugin is receiving updates.\n */\nexport class PluginHandlerHelper {\n  protected subscriptions = new Subscription();\n\n  entityPointer: DontCodeModelPointer | null = null;\n  provider: CommandProviderInterface | null = null;\n  changeHandler: PreviewHandler | null = null;\n  actionPerformer: ActionHandler | null = null;\n  mutex = new Mutex();\n\n  initCommandFlow(\n    provider: CommandProviderInterface,\n    pointer: DontCodeModelPointer,\n    changeHandler: PreviewHandler,\n    actionPerformer?: ActionHandler\n  ): any {\n    this.entityPointer = pointer;\n    this.provider = provider;\n    this.changeHandler = changeHandler;\n    if (actionPerformer!=null)\n      this.actionPerformer=actionPerformer;\n    else if ((changeHandler as any).performAction != null) {\n        // The changehandler is as well an action performer\n      this.actionPerformer= changeHandler as unknown as ActionHandler;\n    }\n  }\n\n  /**\n   * When the component is created for display, it receives the initial data as complete Json.\n   * If it wants, it can call this method who will call handleChange for each property.\n   * This will avoid to duplicate code (first when a complete json is sent, then when subelements are sent)\n   * @protected\n   */\n  decomposeJsonToMultipleChanges(\n    pointer: DontCodeModelPointer,\n    json: any\n  ): void {\n    // Do nothing as now the events are already splitted per subItems\n    if (typeof json === 'object' && this.provider) {\n      let change: Change;\n      const schemaManager = this.provider.getSchemaManager();\n      for (const prop in json) {\n        if (json.hasOwnProperty(prop)) {\n          const subPropertyPointer = schemaManager.generateSubSchemaPointer(\n            pointer,\n            prop\n          );\n          const propType = schemaManager.locateItem(\n            subPropertyPointer.positionInSchema\n          );\n          if (propType?.isArray() && subPropertyPointer.isProperty) {\n            this.decomposeJsonToMultipleChanges(subPropertyPointer, json[prop]);\n          } else {\n            change = new Change(\n              ChangeType.RESET,\n              pointer.position + '/' + prop,\n              json[prop],\n              subPropertyPointer\n            );\n            if (!propType && change.pointer) {\n              // This is not a sub property but a subItem of an array\n              //change.pointer.itemId = change.pointer.key;\n              change.pointer.isProperty = false;\n            }\n\n            if (this.changeHandler!=null) this.changeHandler.handleChange(change);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Calls handleChange each time a change event for any element below this (as per the model's position) is received\n   * @protected\n   */\n  initChangeListening(subElement?: boolean):void {\n    this.initOtherChangeListening(subElement, this.entityPointer);\n  }\n\n  /**\n   * Calls handleChange each time a change event for any element of the model given in parameter\n   * @protected\n   */\n  initOtherChangeListening(subElement?: boolean, pointer?:DontCodeModelPointer|null):void {\n    if (this.provider && pointer) {\n      let filter = pointer.position;\n      if (subElement !== true) filter += '/?';\n      this.subscriptions.add(\n        this.provider\n          .receiveCommands(filter)\n          .pipe(\n            map((change) => {\n              if ((change as any).actionType!=null) // It's an action, not a change\n              {\n                if (this.actionPerformer) {\n                  const action = change as unknown as Action;\n\n                  action.running?.next(this.actionPerformer.performAction(action));\n                }\n              }\n              else if (this.changeHandler) {\n                this.changeHandler.handleChange(change);\n              }\n            })\n          )\n          .subscribe()\n      );\n    } else {\n      throw new Error(\n        'Cannot listen to change before initCommandFlow is called'\n      );\n    }\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param cols\n   * @param colsMap\n   * @param change\n   * @param property\n   * @param transform\n   * @private\n   */\n  applyUpdatesToArray<T>(\n    target: T[],\n    targetMap: Map<string, number>,\n    change: Change,\n    property: string,\n    transform: (position: DontCodeModelPointer, item: any) => T,\n    applyProperty?: (target: T, key: string, value: any) => boolean\n  ): Promise<T[]> {\n    return this.applyUpdatesToArrayAsync(\n      target,\n      targetMap,\n      change,\n      property,\n      (key, item) => {\n        return Promise.resolve(transform(key, item));\n      }\n    );\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param target\n   * @param targetMap\n   * @param change\n   * @param property\n   * @param transform\n   * @param parentPosition\n   * @param applyProperty\n   * @private\n   */\n  applyUpdatesToArrayAsync<T>(\n    target: T[],\n    targetMap: Map<string, number>,\n    change: Change,\n    property: string | null,\n    transform: (position: DontCodeModelPointer, item: any) => Promise<T>,\n    parentPosition?: string,\n    applyProperty?: (target: T, key: string | null, value: any) => boolean\n  ): Promise<T[]> {\n    // We have the mutex to avoid multiple changes checking the map and target array at the same time...\n    return this.mutex.runExclusive(()=> {\n      try {\n        if (!this.provider)\n          throw new Error(\n            'Cannot apply updates before initCommandFlow is called'\n          );\n        if (!change.pointer) {\n          change.pointer = this.provider.calculatePointerFor(change.position);\n        }\n        // If the change concerns the array, then calculates it's element (itemId)\n        parentPosition = parentPosition??this.entityPointer?.position;\n        if (property != null) parentPosition = parentPosition + '/' + property;\n        const subItem = change.pointer.containerPosition === parentPosition;\n        let itemId = subItem\n          ? change.pointer.lastElement\n          : DontCodeModelPointer.lastElementOf(\n              change.pointer.containerPosition\n            ) ?? null;\n\n        let propertyId = change.pointer.isProperty\n          ? change.pointer.lastElement\n          : null;\n        let futureTarget: Observable<T> | null = null;\n        let newTarget: T | null = null;\n        let pos = -1;\n        let targetPos = -1;\n\n        if (itemId != null && targetMap.has(itemId)) {\n          // Does the target item already exist ?\n          pos = targetMap.get(itemId) as number;\n          newTarget = target[pos];\n          futureTarget = of(newTarget);\n        }\n        if (change.beforeKey) {\n          targetPos = targetMap.get(change.beforeKey) as number;\n        }\n\n        switch (change.type) {\n          case ChangeType.ADD:\n          case ChangeType.UPDATE:\n          case ChangeType.RESET:\n            if (propertyId != null) {\n              // It's not a replacement of the item but a change in one of its property\n              // Can we try to update directly the sub property?\n              if (\n                !newTarget ||\n                (newTarget &&\n                  (!applyProperty ||\n                    !applyProperty(newTarget, propertyId, change.value)))\n              ) {\n                // It cannot be dynamically updated by the caller, so we do a full replacement\n                const fullValue = this.provider.getJsonAt(\n                  change.pointer.containerPosition as string\n                );\n                //if (change.value!==fullValue[propertyId]) { Don't check as the new value as already been set in the json\n                const parentPointer = this.provider.calculatePointerFor(\n                  change.pointer.containerPosition as string\n                );\n                if (parentPointer.isProperty)\n                  throw new Error(\n                    'A parent of a property ' +\n                      change.pointer.position +\n                      ' must be an array'\n                  );\n                futureTarget = from(transform(parentPointer, fullValue));\n                /*                      }else {\n                        // We set the same value, so nothing changed\n                        futureTarget = null;\n                      }*/\n              }\n            } else {\n              // The new value replace the old one\n              futureTarget = from(transform(change.pointer, change.value));\n            }\n            break;\n          case ChangeType.MOVE:\n            if (pos !== -1 && subItem && itemId) {\n              // We delete the element moved, it will be inserted at the right position later\n              if (targetPos !== -1 && targetPos > pos) targetPos--;\n              target.splice(pos, 1);\n              // Recalculate all indexes in targetMap\n              targetMap.forEach((value, key) => {\n                if (value > pos) {\n                  targetMap.set(key, value - 1);\n                }\n              });\n              targetMap.delete(itemId);\n              pos = -1;\n            }\n            break;\n          case ChangeType.DELETE:\n            if (pos !== -1 && subItem && itemId) {\n              target.splice(pos, 1);\n              // Recalculate all indexes in targetMap\n              targetMap.forEach((value, key) => {\n                if (value > pos) {\n                  targetMap.set(key, value - 1);\n                }\n              });\n              targetMap.delete(itemId);\n            }\n            futureTarget = null;\n            break;\n        }\n\n        if (futureTarget) {\n          return firstValueFrom(futureTarget\n            .pipe(\n              map((result) => {\n                if (pos !== -1) {\n                  // We just need to replace the new value at the same position\n                  target[pos] = result;\n                } else if (targetPos !== -1) {\n                  // Insert the element at the correct position\n                  target.splice(targetPos, 0, result);\n                  // Recalculate all indexes in targetMap\n                  targetMap.forEach((value, key) => {\n                    if (value >= targetPos) {\n                      targetMap.set(key, value + 1);\n                    }\n                  });\n                  if (itemId != null) targetMap.set(itemId, targetPos);\n                  else\n                    throw new Error(\n                      'Cannot set targetPos ' +\n                        targetPos +\n                        ' without knowing the itemId'\n                    );\n                } else {\n                  // Insert the element at the end\n                  target.push(result);\n                  if (itemId != null) targetMap.set(itemId, targetMap.size);\n                  else\n                    throw new Error(\n                      'Cannot set targetPos ' +\n                        targetPos +\n                        ' without knowing the itemId'\n                    );\n                }\n                return target;\n              }),\n              takeLast(1),\n              catchError((error) => {\n                return Promise.reject(error);\n              })\n            )\n          )\n        } else {\n          return Promise.resolve(target);\n        }\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Sends the action to whatever component can perform it\n   * @param action\n   */\n  async performAction(action: Action): Promise<void> {\n    if( this.provider!=null)\n      await this.provider.sendCommand (action);\n    else return Promise.reject('No provider for the component at position '+this.entityPointer?.position );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  DontCodeModelManager, DontCodeModelPointer,\n  DontCodeReportGroupType,\n  DontCodeReportSortType,\n  DontCodeStoreCriteria,\n  DontCodeStoreGroupby,\n  DontCodeStoreManager,\n  DontCodeStorePreparedEntities,\n  StoreProviderHelper\n} from \"@dontcode/core\";\nimport {map} from \"rxjs/operators\";\nimport {firstValueFrom} from \"rxjs\";\nimport {DontCodeDataTransformer} from \"@dontcode/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityStoreService {\n\n  protected listsByPosition = new Map<string, EntityListManager<any>> ();\n  constructor(protected storeMgr:DontCodeStoreManager, protected modelMgr:DontCodeModelManager) { }\n\n  retrieveListManager<T=never> (pointer:DontCodeModelPointer, description:any, ): EntityListManager<T> {\n    let newOne:EntityListManager<any>|undefined = this.listsByPosition.get(pointer.position);\n    if (newOne == null){\n      newOne = new EntityListManager<T>(pointer, description, this.storeMgr, this.modelMgr);\n      this.listsByPosition.set(pointer.position, newOne);\n    }\n    return newOne;\n  }\n}\n\n/**\n * Manages a list of any object stored by the Dont-Code StoreManager in a way that Angular detects the changes\n */\nexport class EntityListManager<T=never> {\n  protected pointer: DontCodeModelPointer;\n  protected description:any;\n  /**\n   * The array of entities to use\n   */\n  entities: T[]|null = null;\n  prepared : DontCodeStorePreparedEntities<T>|null = null;\n\n  constructor(pointer:DontCodeModelPointer, description: any, protected storeMgr:DontCodeStoreManager, protected modelMgr:DontCodeModelManager) {\n    this.pointer = pointer;\n    this.description = description;\n  }\n\n  push (element:T):void {\n    if (this.entities==null)\n      this.entities=new Array<T>(element);\n    else\n      this.entities = [...this.entities, element];\n  }\n\n  updateWithDetailedEntity (element:T):T {\n    const elementId=(element as any)._id;\n    const updated = new Array<T>();\n    if (this.entities!=null) {\n      this.entities.forEach(value => {\n        const valueId=(value as any)._id;\n        if( valueId==elementId) {\n          element={...element, ...value};\n          updated.push(element);\n        }else {\n          updated.push(value);\n        }\n      })\n      this.entities = [...updated];\n    } else {\n      this.entities = [element];\n    }\n    return element;\n  }\n\n  replace (element:T):boolean {\n    if (this.entities==null) return false;\n\n    const elementId=(element as any)._id;\n    let ret=false;\n    const updated = new Array<T>();\n    this.entities.forEach(value => {\n      const valueId=(value as any)._id;\n      if( valueId==elementId) {\n        updated.push(element);\n        ret = true;\n      }else {\n        updated.push(value);\n      }\n    })\n    this.entities = [...updated];\n    return ret;\n  }\n\n  remove (element:T): Promise<boolean> {\n    if (this.entities==null) return Promise.resolve(false);\n\n    const elementId=(element as any)._id;\n    if (elementId==null)  // Not saved yet, so just remove it from the list\n    {\n      return new Promise (resolve => {\n        if (this.entities!=null) {\n          this.entities = this.entities.filter(val => (val!==element));\n          this.prepared=null;\n          resolve( true);\n        } else resolve (false);\n      });\n    }else {\n    return this.storeMgr.deleteEntity(this.pointer.position, elementId).then(deleted => {\n      if( deleted) {\n        if (this.entities!=null) {\n          this.entities = this.entities.filter(val => (val!==element));\n          this.prepared=null;\n        }\n      }\n      return deleted;\n    }).catch((reason:Error) => {\n      console.error(reason.message);\n      return false;\n    });\n    }\n  }\n\n  reset (): void {\n    if( this.entities!=null)\n      this.entities.length=0;\n    this.prepared=null;\n  }\n\n  store (element:any): Promise<any> {\n    this.prepared=null;\n    return this.storeMgr.storeEntity(this.pointer.position, element);\n  }\n\n  /**\n   * Saves permanently all elements that have been changed\n   */\n  async storeAllChanged (): Promise<any> {\n    if (this.entities==null) return;\n\n    this.prepared=null;\n    for (const entity of this.entities) {\n      await this.storeMgr.storeEntity(this.pointer.position, entity);\n    }\n  }\n\n  loadAll (): Promise<void> {\n    return firstValueFrom(this.storeMgr.searchEntities(this.pointer.position).pipe(\n      map (values => {\n        this.prepared=null;\n        this.entities = [...values];\n      return;\n    })\n    ), {defaultValue:undefined});\n  }\n\n  searchAndPrepareEntities(\n    sort?:{[key:string]:DontCodeReportSortType}|undefined,\n    groupBy?:{[key:string]:DontCodeReportGroupType}|undefined,\n    dataTransformer?:DontCodeDataTransformer,\n    ...criteria: DontCodeStoreCriteria[]\n  ): Promise<void> {\n      // It only supports one groupby and one sortby for now, so just find one if any\n    let listOfValues:any[] = (sort!=null)?Object.values(sort):[];\n    const sortStore = (listOfValues.length>0)?listOfValues[0]:undefined;\n    listOfValues=(groupBy!=null)?Object.values(groupBy):[];\n    const groupByStore= (listOfValues.length>0)?new DontCodeStoreGroupby(listOfValues[0].of,listOfValues[0].display, listOfValues[0].show):undefined;\n    if (this.entities!=null) {\n      this.prepared=null;\n      // Already loaded, just sort & group\n      let sortedValues= this.entities;\n      let groupedValues=undefined;\n\n      if( criteria!=null)\n        sortedValues=StoreProviderHelper.applyFilters(sortedValues, ...criteria);\n      if( dataTransformer!=null) {\n        sortedValues= dataTransformer.postLoadingTransformation(sortedValues);\n      }\n      if (sortStore!=null){\n        sortedValues=StoreProviderHelper.multiSortArray(sortedValues,sortStore);\n      }\n      if (groupByStore!=null){\n        groupedValues=StoreProviderHelper.calculateGroupedByValues(sortedValues, groupByStore, this.modelMgr, this.pointer);\n      }\n      if ((criteria!=null) || (sort!=null) || (groupBy!=null)) {\n        this.prepared=new DontCodeStorePreparedEntities<any>(sortedValues, sortStore, groupedValues);\n      }\n      this.entities=sortedValues; // Updates the list with sorted and modified values\n      return Promise.resolve();\n    } else {\n      // Not loaded already, just ask the store to do it\n      return firstValueFrom(this.storeMgr.searchAndPrepareEntities(this.pointer.position, sortStore, groupByStore, dataTransformer, ...criteria).pipe(\n        map (value => {\n          this.prepared=value;\n          this.entities=this.prepared.sortedData;\n        }))\n      )\n    }\n  }\n\n\n  /**\n   * Loads the detail of an already loaded item. Makes sure it only add any additional fields without changing any values of the item in memory\n   * @param toLoad\n   */\n  loadDetailFromKey (key:any): Promise<any> {\n    if( key==null)\n      return Promise.reject(\"Cannot load entity with null key\");\n    return this.storeMgr.loadEntity(this.pointer.position, key).then(loaded => {\n      if (loaded!=null) {\n        return this.updateWithDetailedEntity(loaded);\n      }\n      return loaded;\n    });\n  }\n    /**\n   * Loads the detail of an already loaded item.\n   * @param toLoad\n   */\n  loadDetailOf (toLoad:any): Promise<any> {\n    return this.loadDetailFromKey(toLoad._id);\n  }\n}\n","import {ChangeHandlerConfig, Core, DontCodeModel, dtcde, Plugin, PluginConfig} from \"@dontcode/core\";\nimport {ComponentLoaderService} from \"../common-dynamic/component-loader.service\";\nimport {PluginCommonTestModule} from \"../plugin-common-test.module\";\n\n/**\n * In complement of DontCodeTestManager, provides some Angular specific helpers\n */\nexport class CommonTestManager {\n\n  /**\n   * Register a specific component for testing\n   * @param type\n   * @param component\n   * @param cls\n   */\n  public static registerComponentForType(forType: string, name: string, component: any) {\n\n    // Add the config so that ComponentLoaderService finds the component\n    dtcde.registerPlugin(new TestPlugin({forType, name}));\n    PluginCommonTestModule.previewHandlers.set(name, component);\n  }\n}\n\nclass TestPlugin implements Plugin {\n\n  protected testComponents :{forType:string, name:string}|null=null;\n\n\n  constructor(toDeclare:{forType:string, name:string}) {\n    this.testComponents=toDeclare;\n  }\n\n  CONFIG: PluginConfig={\n    plugin: {\n      id:'CommonTestManagerPlugin',\n      version:'1.0'\n    },\n    'schema-updates': [{\n      id: 'test-component',\n      description: 'Test Component added',\n      changes: [{\n        location: {\n          parent: '#/$defs/field',\n          id: 'type'\n        },\n        update: {\n          enum: [{\n            Test: {\n              enum: [\n              ]\n            }\n          }\n          ]\n        },\n        replace: false\n      }]\n    }],\n\n    \"preview-handlers\": []\n  }\n\n  PREVIEW_HANDLER_CONFIG: ChangeHandlerConfig={\n    location: {\n      parent: DontCodeModel.APP_FIELDS,\n      id: 'type',\n      values: [{\n        Test: {\n          enum: [\n          ]\n        }\n      }]\n    },\n    class: {\n      source:'common-test-module',\n      name:'name'\n    }\n  };\n\ngetConfiguration(): PluginConfig {\n  if (this.testComponents!=null) {\n    const ret = structuredClone(this.CONFIG) as PluginConfig;\n    const previewConfig = structuredClone(this.PREVIEW_HANDLER_CONFIG) as ChangeHandlerConfig;\n    if( (ret[\"schema-updates\"]!=null) && (ret[\"preview-handlers\"]!=null)) {\n      ret[\"schema-updates\"][0].id = this.testComponents.name;\n      ret[\"schema-updates\"][0].changes[0].update.enum[0].Test.enum.push(this.testComponents.forType);\n\n      previewConfig.class.name=this.testComponents.name;\n      previewConfig.location.values[0].Test.enum.push(this.testComponents.forType);\n      ret[\"preview-handlers\"].push(previewConfig);\n      return ret;\n    }\n  }\n  throw new Error (\"No testComponent to register\");\n}\n\n  pluginInit(dontCode: Core): void {\n  }\n\n}\n","import {DynamicComponent} from \"./dynamic-component\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {PossibleTemplateList, TemplateList} from \"./template-list\";\nimport {DynamicEventSource, DynamicEventType} from \"./dynamic-event\";\nimport {Subscription} from \"rxjs\";\nimport {Component, OnDestroy} from \"@angular/core\";\n\n/**\n * A component that can be dynamically loaded by the dont-code framework.\n * It can integrate with a reactive form.\n * To dynamically load other Dont-code components for subFields, you should use AbstractDynamicLoaderComponent instead\n * To listen to model change, you have to derive from PluginBaseComponent instead.\n */\n@Component({template:''})\nexport abstract class AbstractDynamicComponent implements DynamicComponent, OnDestroy{\n\n  name!: string;\n  value: any;\n  form!: FormGroup;\n\n  parentPosition:string|null=null;\n\n  subscriptions = new Subscription();\n\n  setName(name: string): void {\n    this.name = name;\n  }\n\n  getValue(): any {\n    if (this.form!=null)\n      this.updateValueFromForm();\n    return this.value;\n  }\n\n  setValue(val: any): void {\n    this.value=val;\n\n    if (this.form!=null)\n      this.hydrateValueToForm ();\n  }\n\n  setParentPosition(position: string) {\n    this.parentPosition=position;\n  }\n\n  abstract providesTemplates(key?: string): TemplateList;\n  abstract canProvide(key?: string): PossibleTemplateList;\n\n  setForm(form: FormGroup): void {\n    this.form=form;\n    if ((this.form!=null) && (this.name!=null)) {\n      this.createAndRegisterFormControls();\n    }\n  }\n\n  getForm (): FormGroup {\n    return this.form;\n  }\n\n  /**\n   * By default registers a single control with the name this.name\n   * @protected\n   */\n  protected createAndRegisterFormControls (): void {\n    const control = new FormControl (null, {updateOn:'blur'});\n    this.form.registerControl(this.name, control);\n  }\n  /**\n   * This method allows components to generate a value manageable in FormControl from the original value (set by setValue ())\n   * By default the same value is used\n   * @param val\n   */\n  transformToFormGroupValue(val: any): any {\n    return val;\n  }\n\n  /**\n   * From the values in FormControl to a value manageable by the Dont-code Framework. Will be called by getValue\n   * By default the same value is used\n   * @param val\n   */\n  transformFromFormGroupValue(val: any): any {\n    return val;\n  }\n\n  /**\n   * Updates the form with the value\n   */\n  hydrateValueToForm ():void {\n    if (this.name!=null) {\n      const control = this.form.get(this.name);\n      if( control==null) {\n        throw new Error(\"No form control for the name \"+this.name);\n      } else {\n        const formValue = this.transformToFormGroupValue(this.value);\n        control.setValue(formValue, { emitEvent: false });\n      }\n    }\n  }\n\n  /**\n   * Retrieve value from the Angular form, and converts it to a value that can be stored\n   * @return true if value have been updated\n   */\n  updateValueFromForm ():boolean {\n    if (this.name==null)\n      return false;\n    const control = this.form.get(this.name);\n    if( control==null) {\n      throw new Error(\"No form control for the name \"+this.name);\n    } else {\n      if (control.dirty) {\n        this.value= this.transformFromFormGroupValue(control.value);\n        control.markAsPristine({onlySelf: true});\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a string that can best display the value or null if it's already a string\n   * @param value\n   */\n  public static toBeautifyString (value:unknown, maxLength?:number): string|null {\n    if( value == null)\n      return null;\n\n    let ret=\"\";\n\n    if ( Array.isArray(value)) {\n      value = value[0];\n    }\n    // Try to see if we have json or Date or something else\n    switch (typeof value) {\n      case \"string\": {\n        ret = value;\n        break;\n      }\n      case \"object\": {\n        if (value instanceof Date) {\n          ret = value.toLocaleDateString();\n        } else {\n          ret = JSON.stringify(value, null, 2);\n        }\n        break;\n      }\n      case \"undefined\": {\n        break;\n      }\n      default: {\n        ret = (value as any).toLocaleString();\n      }\n    }\n\n    if( maxLength!=null) {\n      if (ret.length> maxLength) {\n        ret = ret.substring(0,maxLength-3)+'...';\n      }\n    }\n\n    return ret;\n  }\n\n  listEventSources(): DynamicEventSource[] {\n    return [];\n  }\n\n  selectEventSourceFor(type: DynamicEventType, name?: string): DynamicEventSource | null {\n    const sources=this.listEventSources();\n    for (const src of sources) {\n      if( src.type===type) {\n        if (name==null)\n          return src;\n        else if (src.name==name) {\n          return src;\n        }\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n}\n","import {AbstractDynamicComponent} from './abstract-dynamic-component';\nimport {DynamicComponent} from './dynamic-component';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  Injector,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {DontCodeModelPointer} from '@dontcode/core';\nimport {FormGroup} from '@angular/forms';\nimport {ComponentLoaderService} from '../common-dynamic/component-loader.service';\nimport {ReplaySubject} from \"rxjs\";\n\n/** A component must be attached to a insertionpoint in the template **/\n@Directive({ selector: 'dtcde-dynamic' })\nexport class DynamicInsertPoint {}\n\n/**\n * A component that can be dynamically loaded by the dont-code framework, and can dynamically load subcomponents\n * It can integrate with the reactive form or not depending on calling setForm () or not.\n *\n * Components that dynamically loads other components must at least define an insertion point by using this <dtcde-dynamic></dtcde-dynamic>\n */\n@Component({ template: '' })\nexport abstract class AbstractDynamicLoaderComponent\n  extends AbstractDynamicComponent\n  implements AfterViewInit\n{\n  @ViewChild(DynamicInsertPoint, { read: ViewContainerRef, static: false })\n  dynamicInsertPoint!: ViewContainerRef;\n\n  /**\n   * Manages the components that are bound to the form\n   */\n  protected fields = new Array<SubFieldInfo>();\n  /**\n   * Stores the position of subField in fields depending on its name\n   * @protected\n   */\n  protected fieldsMap = new Map<string, number>();\n  protected parentForm: FormGroup|null = null;\n\n  /**\n   * Any action that needs to happen after ngAfterViewInit can be added to this.\n   * @protected\n   */\n  protected componentInited = new ReplaySubject<boolean> ();\n\n  protected constructor(\n    protected loader: ComponentLoaderService,\n    protected injector: Injector,\n    protected ref: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n\n  /**\n   * Define that a subvalue named propertyAndFormName will be managed by a subcomponent of type type\n   * Example: defineSubFields ('currencyCode', 'Currency') will handle a plugin to manage the currency\n   * @param formName\n   * @param type\n   */\n  defineSubField (propertyAndFormName:string, type:string) {\n    const newSubField = new SubFieldInfo(propertyAndFormName, type);\n    this.addSubField(newSubField);\n  }\n\n  /**\n   * Retrieve the information of the subfield at the given name.\n   * @param propertyAndFormName\n   * @protected\n   */\n  protected getSubField (propertyAndFormName:string): SubFieldInfo|undefined {\n    const pos = this.fieldsMap.get(propertyAndFormName);\n    if (pos!=null)\n      return this.fields[pos];\n    else\n      return;\n  }\n\n  protected addSubField (toAdd:SubFieldInfo): number {\n    const pos = this.fields.push( toAdd);\n    this.fieldsMap.set(toAdd.name, pos-1);\n    return pos;\n  }\n\n  getSubFields (): SubFieldInfo[] {\n    return this.fields;\n  }\n\n  /**\n   * This component will load subfields, so unless it doesn't have a name, it creates a new FormGroup\n   * @param form\n   */\n  override setForm(form: FormGroup): void {\n      // Register a FormGroup for this component has it will have to manage values from subFields as well\n    if (this.name) {\n      const formGroup = new FormGroup({}, { updateOn: 'blur' });\n      form.registerControl(this.name, formGroup);\n      super.setForm(formGroup);\n      this.parentForm = form;\n    } else {\n      super.setForm(form);\n      this.parentForm = null;\n    }\n    this.preloadSubFields();\n  }\n\n  override hydrateValueToForm() {\n      // Don't try to update the form as if it is a standard component\n      // as most likely we have created a new FormGroup\n    if (this.parentForm==null)\n      super.hydrateValueToForm();\n    else {\n      let formValue = this.transformToFormGroupValue(this.value);\n      // Sets the form value that are not managed directly by a field\n      for (const key in this.form.controls) {\n        if (this.fieldsMap.get(key)==null) {\n          const control = this.form.get(key);\n          control?.setValue(formValue?formValue[key]:formValue, {emitEvent: false});\n        }\n      }\n    }\n  }\n\n  override updateValueFromForm(): boolean {\n    if (this.parentForm==null)\n      return super.updateValueFromForm();\n    else {\n      let isChanged = false;\n      // Sets the form value that are not managed directly by a field\n      for (const key in this.form.controls) {\n        if (this.fieldsMap.get(key) == null) {\n          const control = this.form.get(key);\n          if( control!=null) {\n            if( control.dirty) {\n              const value = this.transformFromFormGroupValue(control?.value);\n              if (this.value==null) {\n                this.value={};\n              }\n              this.value[key]=value;\n              isChanged=true;\n              control.markAsPristine({onlySelf: true});\n            }\n          }\n        }\n      }\n      return isChanged;\n    }\n  }\n\n  override setValue(val: any) {\n    super.setValue(val);\n\n      // Split the value into its subcomponents\n    for (const element of this.fields) {\n      if (val!=null)\n        this.setSubFieldValue(element, val[element.name]);\n      else\n        this.setSubFieldValue(element, undefined);\n    }\n  }\n\n\n  override getValue(): any {\n    let val = super.getValue();\n    // Adds subfield values into the main value\n    for (const element of this.fields) {\n      const subFieldValue = this.getSubFieldValue(element);\n      if( (subFieldValue!=null) && (val==null)) {\n        this.value={};\n        val=this.value;\n      }\n      if( val[element.name]!==subFieldValue)\n        val[element.name]=subFieldValue;\n    }\n    return val;\n  }\n\n\n  /**\n   * Retrieve the fulledittemplate for a subfield\n   * * @param formName\n   */\n  subFieldFullEditTemplate (subField:string|SubFieldInfo): TemplateRef<any> | null {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    let ret= null;\n    if (component!=null) {\n      ret = component.providesTemplates(subInfo?.type).forFullEdit;\n    }\n    if( subField==null)\n      throw new Error (\"No template for subField \"+subInfo?.name+\" of component \"+this.name);\n    else\n      return ret;\n  }\n\n  /**\n   * Retrieve the fulledittemplate for a subfield\n   * * @param formName\n   */\n  subFieldInlineViewTemplate (subField:string|SubFieldInfo): TemplateRef<any> | null {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    let ret= null;\n    if (component!=null) {\n      ret = component.providesTemplates(subInfo?.type).forInlineView;\n    }\n    if( subField==null)\n      throw new Error (\"No template for subField \"+subInfo?.name+\" of component \"+this.name);\n    else\n      return ret;\n  }\n\n  /**\n   * Retrieve the fullviewtemplate for a subfield\n   * * @param formName\n   */\n  subFieldFullViewTemplate (subField:string|SubFieldInfo): TemplateRef<any> | null {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    let ret= null;\n    if (component!=null) {\n      ret = component.providesTemplates(subInfo?.type).forFullView;\n    }\n    if( subField==null)\n      throw new Error (\"No template for subField \"+subInfo?.name+\" of component \"+this.name);\n    else\n      return ret;\n  }\n\n  /**\n   * Dynamically loads the component to handle the subfield\n   * @param formName\n   * @param type\n   * @param subValue\n   */\n  loadSubField(\n    subField: string | SubFieldInfo,\n    type: string,\n    subValue: any\n  ): Promise<DynamicComponent | null> {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    if (component == null) {\n      return this.loader\n        .insertComponentForFieldType(type, this.dynamicInsertPoint)\n        .then((component) => {\n          if (component!=null) {\n            this.prepareComponent(component, type,(subInfo!=null)?subInfo.name:null, subValue);\n            return component;\n          } else {\n            return null;\n          }\n        });\n    } else {\n      return Promise.resolve(component);\n    }\n  }\n\n  /**\n   * Retrieve the subField value from the component handling it\n   * @param formName\n   * @param type\n   */\n  getSubFieldValue(subField: string | SubFieldInfo): any {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    if (component!=null) {\n      return component.getValue();\n    } else {\n      // No component is handling this subField so we have to do it ourselves\n      if ((this.form!=null)&&(subInfo!=null)) {\n        return this.form.get(subInfo.name)?.value;\n      } else {\n        throw new Error(\n          'Cannot provide value for non existent subField ' + subField\n        );\n      }\n    }\n  }\n\n  /**\n   * Programmatically sets the value of the component handling the subfield\n   * @param formName\n   * @param type\n   * @param val\n   */\n  setSubFieldValue(subField: string|SubFieldInfo, val: any) {\n    const subInfo = (typeof subField === 'string')?this.getSubField(subField as string):subField as SubFieldInfo;\n    const component = subInfo?.component;\n    // Sometimes no subcomponent is loaded, for example when displaying value only\n    if (component!=null) {\n        component.setValue(val);\n    }  else {\n      // No components will manage the value, so let's transform it to a displayable string\n      if ((this.form!=null) && (subInfo!=null)) {\n        const singleVal: { [key: string]: any } = {};\n        let updatedValue = AbstractDynamicLoaderComponent.toBeautifyString(val);\n        if (updatedValue == undefined)  // You cannot set a value to undefined\n          updatedValue = null;\n        singleVal[subInfo.name] = updatedValue;\n        this.form.patchValue(singleVal, {emitEvent: false});\n      }\n    }\n  }\n\n  /**\n   * Loads the component that will handle the display and edit for the item at the specified position\n   * @param position: Either the schemaPosition as string or as DontCodeModelPointer\n   * @param currentJson\n   */\n  loadSubComponent(\n    position: DontCodeModelPointer,\n    type:string,\n    formName:string|null,\n    currentJson?: any\n  ): Promise<DynamicComponent | null> {\n      // Make sure you wait until the component itself is init (and the dynamicInsertPoint is valid)\n\n    return new Promise<void>((resolve, reject) => this.componentInited.subscribe({\n        complete: () => {\n          resolve();\n        },\n        error: (err) => {\n          reject(err);\n        }\n      })).then( () => {\n        //console.debug(\"LoadSubComponent:\"+position.position+' with type '+type+', dynamicInsertPoint is ', (this.dynamicInsertPoint!=null));\n        if (this.dynamicInsertPoint==null) {\n          return null;\n        }\n        return this.loader\n          .insertComponent(position, this.dynamicInsertPoint, currentJson)\n          .then((component) => {\n            if (component != null) {\n              return this.prepareComponent(component, type, formName, currentJson);\n            } else {\n              //console.warn('No ComponentFactory or missing <dtcde-dynamic></dtcde-dynamic> in template');\n              return null;\n            }\n          });\n      });\n  }\n\n  prepareComponent(\n    component: DynamicComponent,\n    type:string,\n    formName: string | null,\n    subValue: any\n  ): DynamicComponent {\n    // Manages dynamic forms if needed\n    if (formName) {\n      /*if (!this.form)\n        throw new Error(\n          'Cannot prepare a subField component without a FormGroup'\n        );*/\n      // Tells the component he's part of a form\n      if (this.form!=null) {\n        component.setName(formName);\n        component.setForm(this.form);\n      }\n      component.setValue(subValue);\n\n    }\n    return component;\n  }\n\n  applyComponentToSubField (component: DynamicComponent, type:string, formName:string): boolean {\n    let info =this.getSubField(formName);\n    if( info==null) {\n      info = new SubFieldInfo(formName, type, component);\n      this.addSubField (info);\n      return true;\n    }else {\n      info.component=component;\n      return false;\n    }\n  }\n\n  ngAfterViewInit(): void {\n//    console.debug (\"DynamicInsertPoint for \"+this.constructor.name, this.dynamicInsertPoint);\n    this.componentInited.complete();\n    this.preloadSubFields();\n  }\n\n  private preloadSubFields(): void {\n    if (this.dynamicInsertPoint!=null) {\n      let detectCheckDone=false;\n      for (const element of this.fields) {\n        if( element.component==null) {\n          const valueSafe =this.value?this.value[element.name]:undefined;\n          this.loadSubField(\n            element.name,\n            element.type,\n            valueSafe\n          ).then((component) => {\n            if (component!=null) {\n              this.applyComponentToSubField(component, element.type, element.name);\n            }\n            if( (this.value!=null)&&(!detectCheckDone))\n              {\n                this.ref.detectChanges();\n                detectCheckDone=true;\n              }\n          });\n        }\n      }\n    }\n  }\n\n}\n\n/**\n * Store information to configure a subfield\n */\nexport class SubFieldInfo {\n  name: string;\n  type: string;\n  component: DynamicComponent | undefined;\n\n  constructor(name:string, type:string, comp?:DynamicComponent) {\n    this.name = name;\n    this.type = type;\n    this.component = comp;\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild\n} from \"@angular/core\";\nimport {DontCodeModelManager, DontCodeStoreManager, dtcde} from \"@dontcode/core\";\nimport {AbstractDynamicComponent} from \"./abstract-dynamic-component\";\nimport {PossibleTemplateList, TemplateList} from \"./template-list\";\nimport {firstValueFrom, lastValueFrom, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {\n  BaseDynamicEvent,\n  BaseDynamicEventSource,\n  DynamicEvent,\n  DynamicEventSource,\n  DynamicEventType\n} from \"./dynamic-event\";\n\n/**\n * A Component that let the user select from a list of entities\n */\n@Component({\n  selector: 'dontcode-reference',\n  templateUrl: './abstract-reference.component.html',\n  styleUrls: ['./abstract-reference.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n  }\n)\nexport class AbstractReferenceComponent extends AbstractDynamicComponent {\n\n  @ViewChild('inlineView',{static:true})\n  private inlineView!: TemplateRef<any>;\n\n  @ViewChild('fullEditView',{static:true})\n  private fullEditView!: TemplateRef<any>;\n\n  @Output()\n  valueChange = new EventEmitter<DynamicEvent>();\n\n  /**\n   * The json path to list the entities, ending with the property to use as a key and display (for example: $.creation.sources.name), to be provided by derived classes\n   * @protected\n   */\n  protected targetEntitiesPos:string|null = null;\n\n  protected targetEntitiesProperty:string|null = null;\n\n  options = new Array<string>();\n\n  constructor(@Optional() protected modelMgr:DontCodeModelManager, @Optional() protected storeMgr:DontCodeStoreManager) {\n    super();\n      // When loaded by Federation, sometimes the dtcde components are not injected.\n    if (modelMgr==null) this.modelMgr=dtcde.getModelManager();\n    if (storeMgr==null) this.storeMgr=dtcde.getStoreManager();\n  }\n\n  canProvide(key?: string): PossibleTemplateList {\n    return new PossibleTemplateList(true, false, true);\n  }\n\n  providesTemplates(key?: string): TemplateList {\n    return new TemplateList (this.inlineView, null, this.fullEditView);\n  }\n\n  protected setTargetEntitiesWithName (entityName:string, propertyName?:string): Promise<boolean> {\n\n    // We must find the list of possible shops\n    const queryResult=this.modelMgr.queryModelToSingle(\"$.creation.entities[?(@.name=='\"+entityName+\"')]\");\n    if( queryResult==null) {\n      console.error(\"Cannot find an entity with name \"+entityName+\" in the model.\");\n      throw new Error (\"Cannot find an entity with name \"+entityName+\" in the model.\");\n    }\n    this.targetEntitiesPos = queryResult.pointer;\n\n    if (this.targetEntitiesPos==null)  return Promise.resolve(false);\n    else {\n      this.targetEntitiesProperty= propertyName??null;\n      return firstValueFrom(this.possibleValues()).then(value => {\n        this.options=value;\n        return true;\n      });\n    }\n  }\n\n  possibleValues (): Observable<Array<string>> {\n    if (this.targetEntitiesPos==null)  throw new Error ('Missing query of target entity for class '+this.constructor.name);\n    const models=this.storeMgr.searchEntities(this.targetEntitiesPos);\n\n    if (this.targetEntitiesProperty!=null){\n      const property=this.targetEntitiesProperty;\n      return models.pipe(\n        map((loadedModels)=> {\n          return loadedModels.map((model) => model[property]);\n      }));\n    } else return models;\n  }\n\n  override listEventSources(): DynamicEventSource[] {\n    const ret= super.listEventSources();\n    ret.push(\n      new BaseDynamicEventSource (\"Value\", DynamicEventType.VALUE_CHANGE, this.valueChange.asObservable())\n    );\n    return ret;\n  }\n\n  valueChanged($event: any):void {\n    this.valueChange.emit(new BaseDynamicEvent(\"Value\", DynamicEventType.VALUE_CHANGE, $event.value));\n  }\n\n  override setValue(val: any) {\n   if ((val!=null) && (this.options!=null) && (this.options.findIndex((value) => {\n     return value == val;\n   })==-1)) {\n     if( this.options[0]!=='Error') {\n      // throw new Error (\"erferf\");\n     }\n     if ( this.options[1] != null) {\n       val=this.options[1].toString();\n     } else {\n       //throw new Error (\"ERerferf\");\n     }\n/*     if( (typeof val ==='string')&&(val!=='Shop EP')&&(val!=='Shop GW')) {\n       throw new Error (\"Error of the death\");\n     } else if (typeof val !== 'string') {\n       throw new Error (\"Error of the death\");\n     }*/\n     /*if( this.counter>=1) {\n     }*/\n    }\n    super.setValue(val);\n  }\n\n}\n","<ng-template #inlineView>{{this.value}}</ng-template>\n<ng-template #fullEditView>\n  <ng-container *ngIf=\"form\" [formGroup]=\"form!\">\n    <p-dropdown [options]=\"options\" [formControlName]=\"name\" [filter]=\"true\" [showClear]=\"true\" placeholder=\"Select a reference\" (onChange)=\"valueChanged ($event)\" [lazy]=\"true\">\n      <ng-template pTemplate=\"selectedItem\">\n        <div *ngIf=\"this.value\">\n          {{this.value}}\n        </div>\n      </ng-template>\n      <ng-template let-reference pTemplate=\"item\">\n        {{reference}}\n      </ng-template>\n    </p-dropdown>\n  </ng-container>\n</ng-template>\n","import {Observable} from \"rxjs\";\n\n/**\n * An interface used by a component to describe what dynamic event it can send\n */\nexport interface DynamicEventSource {\n  name:string;\n  type:DynamicEventType;\n  eventSource:Observable<DynamicEvent>;\n}\n\nexport class BaseDynamicEventSource implements DynamicEventSource{\n\n  constructor(public name:string, public type:DynamicEventType, public eventSource:Observable<DynamicEvent>) {\n  }\n}\n\nexport enum DynamicEventType {\n  VALUE_CHANGE = 'VALUE_CHANGE',\n  SELECTION_CHANGE='SELECTION_CHANGE'\n}\n\n/**\n * A dynamic event sent by one component to another\n */\nexport interface DynamicEvent {\n  name:string;\n  type:DynamicEventType;\n  value:any;\n}\n\nexport class BaseDynamicEvent implements DynamicEvent{\n\n  constructor(public name:string, public type:DynamicEventType, public value:any) {\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {PluginBaseComponent} from \"../plugin-base.component\";\n\n/**\n * Converts any object to a nice string to be displayed in html\n */\n@Pipe({\n  name: 'beautifier',\n  pure:true\n})\nexport class BeautifierPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return PluginBaseComponent.toBeautifyString(value, args[0] as number);\n  }\n\n}\n","import {ChangeDetectorRef, Component, Injector, OnDestroy} from '@angular/core';\nimport {\n  Change,\n  CommandProviderInterface, DontCodeModel,\n  DontCodeModelPointer,\n  PreviewHandler,\n} from '@dontcode/core';\nimport { ComponentLoaderService } from '../common-dynamic/component-loader.service';\nimport {AbstractDynamicLoaderComponent, SubFieldInfo} from './abstract-dynamic-loader-component';\nimport { PluginHandlerHelper } from '../common-handler/plugin-handler-helper';\nimport {debounceTime, Subscription} from 'rxjs';\nimport {DynamicComponent} from \"./dynamic-component\";\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {map} from \"rxjs/operators\";\n\n/**\n * A component that can be loaded by the framework, load subcomponents, listen to model changes, and so on...\n * It can as well dynamically manage a list of subcomponents and a form together with its mapping to a value.\n */\n@Component({ template: '' })\nexport abstract class PluginBaseComponent\n  extends AbstractDynamicLoaderComponent\n  implements PreviewHandler, OnDestroy\n{\n  protected pluginHelper = new PluginHandlerHelper();\n  entityPointer: DontCodeModelPointer | null = null;\n  protected provider: CommandProviderInterface | null = null;\n\n  constructor(loader: ComponentLoaderService, injector: Injector,ref: ChangeDetectorRef) {\n    super(loader, injector, ref);\n  }\n\n  override ngOnDestroy(): void {\n    this.pluginHelper.unsubscribe();\n    super.ngOnDestroy();\n  }\n\n  /**\n   * Listen to this.form updates and update this.value accordingly\n   * @protected\n   */\n  protected updateValueOnFormChanges():void {\n    this.subscriptions.add(this.form.valueChanges.pipe(\n      map (value => {\n        //console.debug(\"Value changed\", value);\n        // Force the recalculation of the data from the form\n        this.getValue();\n        return value;\n      })\n      ).subscribe()\n    );\n  }\n\n  initCommandFlow(\n    provider: CommandProviderInterface,\n    pointer: DontCodeModelPointer\n  ): any {\n    this.entityPointer = pointer;\n    this.provider = provider;\n    this.pluginHelper.initCommandFlow(provider, pointer, this);\n  }\n\n  protected initChangeListening(subElement?: boolean) {\n    this.pluginHelper.initChangeListening(subElement);\n  }\n\n  /**\n   * When the component is created for display, it receives the initial data as complete Json.\n   * If it wants, it can call this method who will call handleChange for each property.\n   * This will avoid to duplicate code (first time when a complete json is sent, second when subelements are sent)\n   * @protected\n   */\n  protected decomposeJsonToMultipleChanges(\n    pointer: DontCodeModelPointer,\n    json: any\n  ): void {\n    this.pluginHelper.decomposeJsonToMultipleChanges(pointer, json);\n  }\n\n  /**\n   * Retrieve the value of the key property if the change concerns it\n   * @param change\n   * @param key\n   */\n  decodeStringField(change: Change, key: string): string | undefined {\n    if (change.pointer?.lastElement === key) {\n      return change.value;\n    } else return undefined;\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param target\n   * @param targetMap\n   * @param change\n   * @param property\n   * @param transform\n   * @param parentPosition\n   * @param applyProperty\n   * @private\n   */\n  applyUpdatesToArray<T>(\n    target: T[],\n    targetMap: Map<string, number>,\n    change: Change,\n    property: string,\n    transform: (position: DontCodeModelPointer, item: any) => T,\n    parentPosition?: string,\n    applyProperty?: (target: T, key: string, value: any) => boolean\n  ): Promise<T[]> {\n    return this.applyUpdatesToArrayAsync(\n      target,\n      targetMap,\n      change,\n      property,\n      (key, item) => {\n        return Promise.resolve(transform(key, item));\n      },\n      parentPosition\n    );\n  }\n\n  /**\n   * Updates the array of T elements by applying the changes received and calling the transform method\n   * @param target\n   * @param targetMap\n   * @param change\n   * @param property\n   * @param transform\n   * @param parentPosition\n   * @param applyProperty\n   * @private\n   */\n  applyUpdatesToArrayAsync<T>(\n    target: T[],\n    targetMap: Map<string, number>,\n    change: Change,\n    property: string | null,\n    transform: (position: DontCodeModelPointer, item: any) => Promise<T>,\n    parentPosition?: string,\n    applyProperty?: (target: T, key: string | null, value: any) => boolean\n  ): Promise<T[]> {\n    return this.pluginHelper.applyUpdatesToArrayAsync(\n      target,\n      targetMap,\n      change,\n      property,\n      transform,\n      parentPosition,\n      applyProperty\n    );\n  }\n\n  abstract handleChange(change: Change): void;\n\n  /**\n   * Dynamically manages the list of subFields (and sub components) based on the change.\n   * @param change\n   * @protected\n   */\n  protected updateSubFieldsWithChange(change: Change, subProperty:string|null, parentPosition?: string): Promise<SubFieldInfo[]|null> {\n      return this.applyUpdatesToArrayAsync(\n        this.fields,\n        this.fieldsMap,\n        change,\n        subProperty,\n        (position, value) => {\n          return this.loadSubComponent(position, value.type, value.name).then((component) => {\n            return new SubFieldInfo(value.name, value.type, component??undefined);\n          });\n        },\n        parentPosition,\n        (elt, key, newVal) => {\n          switch (key) {\n            case DontCodeModel.APP_FIELDS_NAME_NODE:\n              elt.name = newVal;\n              break;\n            default:\n              return false;\n          }\n          return true;\n        }\n      ).then((updatedFields) => {\n        this.fields = updatedFields;\n        this.rebuildForm();\n        return updatedFields;\n      });\n  }\n\n  /**\n   * Rebuild the Reactive form from the list of fields configured with the entity\n   * @protected\n   */\n  protected rebuildForm() {\n\n    if (this.form==null)  // Ignore if the component doesn't have a form\n      return;\n    // Updates the formgroup with new fields and remove old fields if necessary\n    const toRemove = new Set<string>();\n    // tslint:disable-next-line:forin\n    for (const formKey in this.form.controls) {\n      toRemove.add(formKey);\n    }\n\n    for (const field of this.fields) {\n      let val = null;\n      if (this.value && this.value[field.name]) {\n        val = this.value[field.name];\n      }\n      toRemove.delete(field.name);\n\n      // Check if the component manages the FormControl itself or if it relies on us\n      if (field.component!=null) {\n        field.component?.setValue(val);\n      } else {\n        val = PluginBaseComponent.toBeautifyString(val);\n        this.form.registerControl(\n          field.name,\n          new FormControl(val, Validators.required)\n        );\n      }\n    }\n\n    toRemove.forEach((key) => {\n      this.form.removeControl(key);\n    });\n  }\n\n}\n","import {TemplateRef} from \"@angular/core\";\n\nexport class TemplateList {\n  forInlineView: TemplateRef<any>|null;\n  forFullView: TemplateRef<any>|null;\n  forFullEdit: TemplateRef<any>|null;\n\n\n  constructor(forInlineView: TemplateRef<any>|null, forFullView: TemplateRef<any>|null, forFullEdit: TemplateRef<any>|null) {\n    this.forInlineView = forInlineView;\n    this.forFullView = forFullView;\n    this.forFullEdit = forFullEdit;\n  }\n}\n\nexport class PossibleTemplateList {\n  forInlineView: boolean;\n  forFullView: boolean;\n  forFullEdit: boolean;\n\n\n  constructor(forInlineView: boolean, forFullView: boolean, forFullEdit: boolean) {\n    this.forInlineView = forInlineView;\n    this.forFullView = forFullView;\n    this.forFullEdit = forFullEdit;\n  }\n}\n","import {Change, DontCodeModelManager, DontCodeSchemaItem, ModelQuerySingleResult} from \"@dontcode/core\";\nimport {Injectable} from \"@angular/core\";\n\n/**\n * Stores and constantly updates the json (as an instance of the DontCodeSchema) as it is being edited / modified through Change events\n * It's a wrapper around DontCodeModelManager\n * It does not store the entity values but the description of entities, screens... as defined in the Editor\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValueService {\n\n  constructor(protected modelMgr:DontCodeModelManager) {\n  }\n\n  getContent(): any {\n    return this.modelMgr.getContent();\n  }\n\n  /**\n   * Resets the current json content to the one given in parameter\n   * @param newContent\n   */\n  resetContent(newContent: any): void {\n    this.modelMgr.resetContent(newContent);\n  }\n  /**\n   * Subscribes to the Subject in parameter to receive model updates through changes.\n   * Changes are generated by the Editor as the user modifies the application.\n   * It then modifies it's internal json to be up to date.\n   * @param receivedCommands\n   * @deprecated in favor of applyChange\n   */\n/*  receiveUpdatesFrom(receivedCommands: Subject<Change>): void {\n    this.model.receiveUpdatesFrom(receivedCommands);\n  }\n*/\n  /**\n   * Apply the change to the model and returns the list of subchanges implied by it\n   * @param chg\n   */\n/*  applyChange (chg: Change): Change[] {\n    return this.modelMgr.applyChange(chg);\n  }*/\n  /**\n   * Provides the json extract at the given position.\n   * For example, findAtPosition ('creation/entities/a') will returns the description (fields...) of the first entity created with the editor\n   * @param position\n   * @param create\n   */\n  findAtPosition(position: string, create?: boolean): any {\n    return this.modelMgr.findAtPosition(position, create);\n  }\n\n  /**\n   * Enable querying the model for any value, following jsonPath model\n   * To use when potentially you expect multiple values\n   * @param query: the query as a jsonPath\n   * @param position: in case the jsonPath is relative\n   */\n  queryModelToArray(query: string, position?: string): Array<any> {\n    return this.modelMgr.queryModelToArray(query, position);\n  }\n\n  /**\n   * Enable querying the model for any value, following jsonPath model\n   * To use when potentially you expect a single value.\n   * @param query: the query as a  jsonPath\n   * @param position: in case the jsonPath is relative\n   */\n  queryModelToSingle(query: string, position?: string): ModelQuerySingleResult|null {\n    return this.modelMgr.queryModelToSingle(query, position);\n  }\n\n  /**\n   * Returns the list of values that are possible target of a given property path. With this the Builder User Interface can display to the user a combo-box will all targets\n   * For example, with the following model:\n   * \"from\": {\n   *           \"type\": \"string\",\n   *           \"format\": \"$.creation.sources.name\"\n   *         }\n   *\n   * findAllPossibleTargetsOrProperty (\"from\", ...) will returns all sources names.\n   * @param property\n   * @param position\n   * @param schemaItem\n   */\n  findAllPossibleTargetsOfProperty(\n    property: string,\n    position: string,\n    schemaItem?: DontCodeSchemaItem\n  ): Array<any> {\n    return this.modelMgr.findAllPossibleTargetsOfProperty(property, position, schemaItem);\n  }\n\n  /**\n   * Returns the exact element that matches the target of a given property path.\n   *\n   * For example, with the following Dont-code model:\n   * \"from\": {\n   *           \"type\": \"string\",\n   *           \"format\": \"$.creation.sources.name\"\n   *         }\n   *\n   * and an instantiated model like this:\n   * {\n   *   \"from\": \"EntityName\"\n   * }\n   * findAllPossibleTargetsOrProperty (\"from\", ...) will return only the source named \"EntityName\".\n   * @param property\n   * @param position\n   * @param schemaItem\n   */\n  findTargetOfProperty(\n    property: string,\n    position: string,\n    schemaItem?: DontCodeSchemaItem\n  ): ModelQuerySingleResult|null {\n    return this.modelMgr.findTargetOfProperty(property, position, schemaItem);\n    }\n\n  }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {PluginModuleInterface} from \"@dontcode/core\";\nimport {PluginCommonModule} from \"./plugin-common.module\";\n\n@NgModule({\n  imports: [CommonModule, PluginCommonModule],\n  declarations: [],\n  exports: [],\n  id:'dontcode-plugin/common-test-module'\n})\nexport class PluginCommonTestModule  implements PluginModuleInterface{\n  public static previewHandlers = new Map<string, any>();\n  exposedPreviewHandlers(): Map<string, any> {\n    return PluginCommonTestModule.previewHandlers;\n  }\n}\n\nexport * from './common-test/common-test-manager';\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {DynamicInsertPoint} from \"./common-ui/abstract-dynamic-loader-component\";\nimport {\n  DontCodeChangeManager,\n  DontCodeModelManager,\n  DontCodePreviewManager,\n  DontCodeSchemaManager,\n  DontCodeStoreManager,\n  dtcde\n} from \"@dontcode/core\";\nimport {DONT_CODE_CORE} from \"./common-global/globals\";\nimport {BeautifierPipe} from './common-ui/pipes/beautifier.pipe';\nimport {DropdownModule} from \"primeng/dropdown\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {AbstractReferenceComponent} from \"./common-ui/abstract-reference.component\";\n\n@NgModule({\n  imports: [CommonModule, DropdownModule, ReactiveFormsModule],\n  declarations: [DynamicInsertPoint, BeautifierPipe, AbstractReferenceComponent],\n  exports: [DynamicInsertPoint, BeautifierPipe, AbstractReferenceComponent]\n})\nexport class PluginCommonModule {\n  /**\n   * Injects the DontCode core components into Angular's Dependency injection\n   * @param config\n   */\n  static forRoot(): ModuleWithProviders<PluginCommonModule> {\n    return {\n      ngModule: PluginCommonModule,\n      providers: [\n        {provide:DONT_CODE_CORE, useValue: dtcde},\n        {provide:DontCodeSchemaManager, useValue:dtcde.getSchemaManager()},\n        {provide:DontCodeModelManager, useValue:dtcde.getModelManager()},\n        {provide:DontCodePreviewManager, useValue:dtcde.getPreviewManager()},\n        {provide:DontCodeStoreManager, useValue:dtcde.getStoreManager()},\n        {provide:DontCodeChangeManager, useValue:dtcde.getChangeManager()},\n        BeautifierPipe\n      ]\n    }\n  }\n}\n\nexport * from './common-global/globals';\nexport * from './common-handler/abstract-plugin-handler';\nexport * from './common-handler/plugin-handler-helper';\nexport * from './common-ui/plugin-base.component';\nexport * from './common-ui/template-list';\nexport * from './common-ui/dynamic-component';\nexport * from './common-ui/dynamic-event';\nexport * from './common-ui/abstract-dynamic-component';\nexport * from './common-ui/abstract-dynamic-loader-component';\nexport * from './common-ui/abstract-reference.component';\nexport * from './common-ui/pipes/beautifier.pipe';\nexport * from './common-storage/entity-store.service';\nexport * from './common-dynamic/component-loader.service';\nexport * from './common-values/value.service';\nexport * from './common-config/common-lib-config';\nexport * from './common-config/common-config.service';","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Subject","dateTimestampProvider","ReplaySubject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","currentObservers","observers","hasError","thrownError","lift","operator","subject","AnonymousSubject","Array","from","observer","error","err","shift","complete","unsubscribe","observed","_a","_trySubscribe","asObservable","observable","source","create","destination","_b","call","subscribe","EmptyError","SafeSubscriber","firstValueFrom","config","hasConfig","Promise","resolve","reject","defaultValue","EMPTY","empty","scheduler","emptyScheduled","schedule","popScheduler","of","args","innerFrom","createOperatorSubscriber","operate","catchError","selector","innerSub","syncUnsub","handledResult","undefined","takeLast","count","buffer","delegate","Date","createErrorClass","_super","EmptyErrorImpl","name","message","ObjectUnsubscribedErrorImpl","isFunction","isScheduler","arr","popResultSelector","pop","popNumber","E_TIMEOUT","Error","E_ALREADY_LOCKED","E_CANCELED","__awaiter$2","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","e","rejected","result","done","then","apply","Semaphore","_value","_cancelError","_weightedQueues","_weightedWaiters","acquire","weight","_dispatch","runExclusive","callback","release","waitForUnlock","isLocked","getValue","setValue","cancel","forEach","queue","entry","queueEntry","previousValue","previousWeight","_newReleaser","_drainUnlockWaiters","called","waiter","__awaiter$1","Mutex","cancelError","_semaphore","releaser","withTimeout","sync","timeout","timeoutError","isTimeout","handle","setTimeout","ticket","isArray","clearTimeout","tryAcquire","alreadyAcquiredError","Inject","Injectable","Optional","DONT_CODE_COMMON_CONFIG","CommonConfigService","updates","getConfig","getUpdates","updateConfig","property","batchUpdateConfig","newValues","Object","assign","factory","ɵfac","providedIn","InjectionToken","CHANNEL_CHANGE_NAME","SANDBOX_MENUS","createNgModule","getNgModuleById","COMMAND_PROVIDER","DONT_CODE_CORE","ComponentLoaderService","injector","dontCodeCore","previewMgr","provider","moduleMap","Map","mutex","getOrCreatePluginModuleRef","moduleSource","moduleRef","get","set","loadPluginModule","handlerConfig","class","initPlugins","insertComponentForFieldType","type","insertPoint","insertComponent","schemaPosition","currentJson","schemaPos","positionInSchema","isPointer","getJsonAt","position","retrieveHandlerConfig","componentClass","instance","exposedPreviewHandlers","createComponent","catch","reason","console","componentRef","ngModuleRef","component","initCommandFlow","registerModuleForTest","module","i0","Injector","i1","DontCodePreviewManager","PluginHandlerHelper","AbstractPluginHandler","subscriptions","pluginHelper","entityPointer","pointer","initChangeListening","decomposeJsonToMultipleChanges","json","applyUpdatesToArray","target","targetMap","change","transform","applyProperty","applyUpdatesToArrayAsync","key","item","parentPosition","performAction","action","Change","ChangeType","DontCodeModelPointer","map","changeHandler","actionPerformer","schemaManager","getSchemaManager","prop","hasOwnProperty","subPropertyPointer","generateSubSchemaPointer","propType","locateItem","isProperty","RESET","handleChange","subElement","initOtherChangeListening","filter","add","receiveCommands","pipe","actionType","running","calculatePointerFor","subItem","containerPosition","itemId","lastElement","lastElementOf","propertyId","futureTarget","newTarget","pos","targetPos","has","beforeKey","ADD","UPDATE","fullValue","parentPointer","MOVE","delete","DELETE","size","_this","_asyncToGenerator","sendCommand","DontCodeStoreGroupby","DontCodeStorePreparedEntities","StoreProviderHelper","EntityStoreService","storeMgr","modelMgr","listsByPosition","retrieveListManager","description","newOne","EntityListManager","DontCodeStoreManager","DontCodeModelManager","entities","prepared","element","updateWithDetailedEntity","elementId","_id","updated","valueId","replace","ret","remove","val","deleteEntity","deleted","reset","store","storeEntity","storeAllChanged","entity","loadAll","searchEntities","values","searchAndPrepareEntities","sort","groupBy","dataTransformer","criteria","listOfValues","sortStore","groupByStore","display","show","sortedValues","groupedValues","applyFilters","postLoadingTransformation","multiSortArray","calculateGroupedByValues","sortedData","loadDetailFromKey","loadEntity","loaded","loadDetailOf","toLoad","DontCodeModel","dtcde","PluginCommonTestModule","CommonTestManager","registerComponentForType","forType","registerPlugin","TestPlugin","previewHandlers","toDeclare","testComponents","CONFIG","plugin","id","version","changes","location","parent","update","enum","Test","PREVIEW_HANDLER_CONFIG","APP_FIELDS","getConfiguration","structuredClone","previewConfig","pluginInit","dontCode","FormControl","Component","AbstractDynamicComponent","setName","form","updateValueFromForm","hydrateValueToForm","setParentPosition","setForm","createAndRegisterFormControls","getForm","control","updateOn","registerControl","transformToFormGroupValue","transformFromFormGroupValue","formValue","emitEvent","dirty","markAsPristine","onlySelf","toBeautifyString","maxLength","toLocaleDateString","JSON","stringify","toLocaleString","substring","listEventSources","selectEventSourceFor","sources","src","ngOnDestroy","selectors","decls","vars","template","AbstractDynamicComponent_Template","rf","ctx","encapsulation","Directive","ViewChild","ViewContainerRef","FormGroup","DynamicInsertPoint","AbstractDynamicLoaderComponent","loader","ref","fields","fieldsMap","parentForm","componentInited","defineSubField","propertyAndFormName","newSubField","SubFieldInfo","addSubField","getSubField","toAdd","getSubFields","formGroup","preloadSubFields","controls","isChanged","setSubFieldValue","subFieldValue","getSubFieldValue","subFieldFullEditTemplate","subField","subInfo","providesTemplates","forFullEdit","subFieldInlineViewTemplate","forInlineView","subFieldFullViewTemplate","forFullView","loadSubField","subValue","dynamicInsertPoint","prepareComponent","singleVal","updatedValue","patchValue","loadSubComponent","formName","applyComponentToSubField","info","ngAfterViewInit","detectCheckDone","valueSafe","detectChanges","ChangeDetectorRef","viewQuery","AbstractDynamicLoaderComponent_Query","_t","read","static","comp","ChangeDetectionStrategy","EventEmitter","Output","PossibleTemplateList","TemplateList","BaseDynamicEvent","BaseDynamicEventSource","DynamicEventType","_c0","_c1","AbstractReferenceComponent_ng_template_0_Template","ctx_r1","AbstractReferenceComponent_ng_template_2_ng_container_0_ng_template_2_div_0_Template","ctx_r7","AbstractReferenceComponent_ng_template_2_ng_container_0_ng_template_2_Template","ctx_r5","AbstractReferenceComponent_ng_template_2_ng_container_0_ng_template_3_Template","reference_r8","$implicit","AbstractReferenceComponent_ng_template_2_ng_container_0_Template","_r10","ctx_r9","valueChanged","$event","ctx_r4","AbstractReferenceComponent_ng_template_2_Template","ctx_r3","AbstractReferenceComponent","valueChange","targetEntitiesPos","targetEntitiesProperty","options","getModelManager","getStoreManager","canProvide","inlineView","fullEditView","setTargetEntitiesWithName","entityName","propertyName","queryResult","queryModelToSingle","possibleValues","models","loadedModels","model","VALUE_CHANGE","emit","findIndex","toString","AbstractReferenceComponent_Query","dependencies","i2","NgIf","i3","Dropdown","i4","PrimeTemplate","i5","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","changeDetection","OnPush","eventSource","Pipe","PluginBaseComponent","BeautifierPipe","pure","Validators","updateValueOnFormChanges","valueChanges","decodeStringField","updateSubFieldsWithChange","subProperty","elt","newVal","APP_FIELDS_NAME_NODE","updatedFields","rebuildForm","toRemove","Set","formKey","field","required","removeControl","features","ValueService","getContent","resetContent","newContent","findAtPosition","queryModelToArray","query","findAllPossibleTargetsOfProperty","schemaItem","findTargetOfProperty","NgModule","CommonModule","PluginCommonModule","imports","declarations","exports","DontCodeChangeManager","DontCodeSchemaManager","DropdownModule","ReactiveFormsModule","forRoot","ngModule","providers","provide","useValue","getPreviewManager","getChangeManager"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,32]}