# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Merge Development
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
          git merge origin/Development --strategy=recursive --strategy-option=theirs
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: |
          npm install @dontcode/core@latest @dontcode/plugin-common@latest @dontcode/plugin-basic@latest @dontcode/plugin-screen@latest @dontcode/plugin-fields@latest
          npm ci
      - name: Build
        run: npm run build --if-present
      - name: Tests
        run: |
          npm run ng test
          npm run ng e2e
      - uses: actions/upload-artifact@v1
        # Test run screenshots only on failure
        if: failure()
        with:
          name: cypress-screenshots
          path: dist/cypress/apps/preview-ui-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: dist/cypress/apps/preview-ui-e2e/videos
      - name: Rebuild for deploy
        run: npm run build -- --prod --base-href "https://dont-code.net/preview-ui/"
      - name: Push
        run: |
          git commit -a -m "New version" --allow-empty
          git push
      - name: Deploy
        if: success()
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist/apps/preview-ui
